/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings/route'
import { Route as AnalysisRouteImport } from './routes/analysis/route'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as AnalysisIndexImport } from './routes/analysis/index'
import { Route as AnalysisSiteRunIdImport } from './routes/analysis/$site-run-id'
import { Route as AnalysisSitesIndexImport } from './routes/analysis/sites/index'

// Create/Update Routes

const SettingsRouteRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const AnalysisRouteRoute = AnalysisRouteImport.update({
  id: '/analysis',
  path: '/analysis',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const AnalysisIndexRoute = AnalysisIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AnalysisRouteRoute,
} as any)

const AnalysisSiteRunIdRoute = AnalysisSiteRunIdImport.update({
  id: '/$site-run-id',
  path: '/$site-run-id',
  getParentRoute: () => AnalysisRouteRoute,
} as any)

const AnalysisSitesIndexRoute = AnalysisSitesIndexImport.update({
  id: '/sites/',
  path: '/sites/',
  getParentRoute: () => AnalysisRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analysis': {
      id: '/analysis'
      path: '/analysis'
      fullPath: '/analysis'
      preLoaderRoute: typeof AnalysisRouteImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRoute
    }
    '/analysis/$site-run-id': {
      id: '/analysis/$site-run-id'
      path: '/$site-run-id'
      fullPath: '/analysis/$site-run-id'
      preLoaderRoute: typeof AnalysisSiteRunIdImport
      parentRoute: typeof AnalysisRouteImport
    }
    '/analysis/': {
      id: '/analysis/'
      path: '/'
      fullPath: '/analysis/'
      preLoaderRoute: typeof AnalysisIndexImport
      parentRoute: typeof AnalysisRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof SettingsRouteImport
    }
    '/analysis/sites/': {
      id: '/analysis/sites/'
      path: '/sites'
      fullPath: '/analysis/sites'
      preLoaderRoute: typeof AnalysisSitesIndexImport
      parentRoute: typeof AnalysisRouteImport
    }
  }
}

// Create and export the route tree

interface AnalysisRouteRouteChildren {
  AnalysisSiteRunIdRoute: typeof AnalysisSiteRunIdRoute
  AnalysisIndexRoute: typeof AnalysisIndexRoute
  AnalysisSitesIndexRoute: typeof AnalysisSitesIndexRoute
}

const AnalysisRouteRouteChildren: AnalysisRouteRouteChildren = {
  AnalysisSiteRunIdRoute: AnalysisSiteRunIdRoute,
  AnalysisIndexRoute: AnalysisIndexRoute,
  AnalysisSitesIndexRoute: AnalysisSitesIndexRoute,
}

const AnalysisRouteRouteWithChildren = AnalysisRouteRoute._addFileChildren(
  AnalysisRouteRouteChildren,
)

interface SettingsRouteRouteChildren {
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsIndexRoute: SettingsIndexRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analysis': typeof AnalysisRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/analysis/$site-run-id': typeof AnalysisSiteRunIdRoute
  '/analysis/': typeof AnalysisIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/analysis/sites': typeof AnalysisSitesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analysis/$site-run-id': typeof AnalysisSiteRunIdRoute
  '/analysis': typeof AnalysisIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/analysis/sites': typeof AnalysisSitesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analysis': typeof AnalysisRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/analysis/$site-run-id': typeof AnalysisSiteRunIdRoute
  '/analysis/': typeof AnalysisIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/analysis/sites/': typeof AnalysisSitesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analysis'
    | '/settings'
    | '/analysis/$site-run-id'
    | '/analysis/'
    | '/settings/'
    | '/analysis/sites'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analysis/$site-run-id'
    | '/analysis'
    | '/settings'
    | '/analysis/sites'
  id:
    | '__root__'
    | '/'
    | '/analysis'
    | '/settings'
    | '/analysis/$site-run-id'
    | '/analysis/'
    | '/settings/'
    | '/analysis/sites/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalysisRouteRoute: typeof AnalysisRouteRouteWithChildren
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalysisRouteRoute: AnalysisRouteRouteWithChildren,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analysis",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analysis": {
      "filePath": "analysis/route.tsx",
      "children": [
        "/analysis/$site-run-id",
        "/analysis/",
        "/analysis/sites/"
      ]
    },
    "/settings": {
      "filePath": "settings/route.tsx",
      "children": [
        "/settings/"
      ]
    },
    "/analysis/$site-run-id": {
      "filePath": "analysis/$site-run-id.tsx",
      "parent": "/analysis"
    },
    "/analysis/": {
      "filePath": "analysis/index.tsx",
      "parent": "/analysis"
    },
    "/settings/": {
      "filePath": "settings/index.tsx",
      "parent": "/settings"
    },
    "/analysis/sites/": {
      "filePath": "analysis/sites/index.tsx",
      "parent": "/analysis"
    }
  }
}
ROUTE_MANIFEST_END */
