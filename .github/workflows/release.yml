name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  HUSKY: 0

permissions:
  pull-requests: write
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      hasChangeset: ${{ steps.changesets.outputs.hasChangeset }}
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: ./.github/actions/ci-setup

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          commitMode: "github-api"
          publish: pnpm changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Has Changeset
        run: echo "hasChangeset ${{ steps.changesets.outputs.hasChangeset }}"
      - name: Log Has Published
        run: echo "published ${{ steps.changesets.outputs.published }}"

  publish-check:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Log Has Changeset
        run: echo "hasChangeset ${{ needs.release.outputs.hasChangeset }}"
      - name: Log Has Published
        run: echo "published ${{ needs.release.outputs.published }}"

  publish:
    needs: release
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: ./.github/actions/ci-setup 

      - name: Publish
        run: pnpm changeset tag
  publish-tauri:
    needs: publish
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
        #   - platform: 'windows-latest'
        #     args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - uses: ./.github/actions/ci-setup
      - uses: Swatinem/rust-cache@v2
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: apps/serpeo
          args: ${{ matrix.args }}
          tagName: 'serpeo@__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
        #   releaseDraft: true
        #   prerelease: false